package it.polimi.deib.provaFinale2014.andrea.celli_stefano1.cereda.client.interfaces.gui;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

import javax.swing.JButton;
import javax.swing.JPanel;

/**
 * This class manages a panel that contains two buttons to let the player choose
 * which pawn he wants to use (in a two player match).
 * 
 * @author Andrea
 * 
 */
public class PawnChooserPanel extends JPanel {
    private static final long serialVersionUID = -5633075482856081626L;

    // the button listener
    private ButtonListener listener;

    // buttons
    private JButton pawn1Button = new JButton("Use pawn 1");
    private JButton pawn2Button = new JButton("Use pawn 2");

    // the gui
    private InterfaceGui gui;

    /**
     * The constructor
     */
    public PawnChooserPanel(int choicePanelWidth, int choicePanelHeight,
            InterfaceGui gui) {
        this.gui = gui;

        this.setSize(choicePanelWidth, choicePanelHeight);
        this.setLocation(choicePanelWidth, choicePanelHeight);

        listener = new ButtonListener();
        pawn1Button.addActionListener(listener);
        pawn2Button.addActionListener(listener);

        this.setLayout(null);

        pawn1Button.setSize(choicePanelWidth, choicePanelHeight / 2);
        pawn2Button.setSize(choicePanelWidth, choicePanelHeight / 2);
        pawn1Button.setLocation(0, 0);
        pawn2Button.setLocation(0, choicePanelHeight / 2);
        pawn1Button.setOpaque(true);
        pawn2Button.setOpaque(true);
        this.add(pawn1Button);
        this.add(pawn2Button);
        pawn1Button.setVisible(true);
        pawn2Button.setVisible(true);

        gui.getFrame().getMap().add(this, 0);
        gui.getFrame().validate();
        gui.getFrame().repaint();
    }

    /**
     * This inner class defines a listener that manages the action events
     * generated by buttons
     */
    private class ButtonListener implements ActionListener {

        public void actionPerformed(ActionEvent e) {
            boolean answer = false;
            JButton pressed = (JButton) e.getSource();

            String selectedOption = pressed.getText();

            if ("Use pawn 1".equals(selectedOption)) {
                answer = false;
            } else {
                answer = true;

            }

            gui.returnShepherdChoice(answer);
        }

    }
}
